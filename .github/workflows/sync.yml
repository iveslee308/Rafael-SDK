name: Sync Specific Release Files

on:
  schedule:
    - cron: '0 0 * * *'  # 每天自动同步
  workflow_dispatch:  # 允许手动触发

jobs:
  check_secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Check if IVESTEST secret exists
        run: |
          if [ -z "${{ secrets.IVESTEST }}" ]; then
            echo "IVESTEST secret is not set"
            exit 1
          else
            echo "IVESTEST secret is set"
          fi

      - name: Fetch latest release from private repo
        id: get_latest_release
        run: |
          # 发送请求获取最新 release 信息
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.IVESTEST }}" \
            https://api.github.com/repos/iveslee308/Rafael-SDK-Internal/releases/latest)

          # 打印响应内容，方便调试
          echo "API Response: $RESPONSE"
          
          # 检查是否返回了有效的 release 信息
          if [[ "$RESPONSE" == *"Not Found"* ]]; then
            echo "Error: No release found."
            exit 1  # 如果没有找到 release，退出并标记失败
          fi

          # 提取 release 的版本号
          LATEST_RELEASE=$(echo "$RESPONSE" | jq -r '.tag_name')

          # 检查是否成功提取到版本号
          if [ "$LATEST_RELEASE" == "null" ]; then
            echo "Error: No valid release found."
            exit 1  # 如果没有有效的版本号，退出并标记失败
          fi

          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_ENV  # 保存版本号为环境变量
          echo "Release $LATEST_RELEASE found"
          
          RELEASE_ASSETS=$(curl -s -H "Authorization: token ${{ secrets.IVESTEST }}" \
            https://api.github.com/repos/iveslee308/Rafael-SDK-Internal/releases/tags/$LATEST_RELEASE | jq '.assets')
          if [ "$RELEASE_ASSETS" = "[]" ]; then
            echo "No assets found in release $LATEST_RELEASE"
          else
            echo "Assets found: $RELEASE_ASSETS"
          fi
          
     # - name: Download release asset from private repo
     #   run: |
     #     # Get the asset URL from the release data
     #     ASSET_URL=$(curl -s -H "Authorization: token ${{ secrets.IVESTEST }}" \
     #       https://api.github.com/repos/iveslee308/Rafael-SDK-Internal/releases/tags/$LATEST_RELEASE | \
     #       jq -r '.assets[] | select(.name | test(".*\\.zip$")) | .url')
      
     #     if [ -z "$ASSET_URL" ]; then
     #       echo "No asset found"
     #       exit 1
     #     fi
      
     #     # Download the asset
     #     echo "Downloading asset from $ASSET_URL"
     #     curl -L -H "Authorization: token ${{ secrets.IVESTEST }}" -o release_asset.zip $ASSET_URL

      #- name: Push files to public repo
      #  run: |
      #    cd release-assets
      #    git init
      #    git remote add origin https://github.com/iveslee308/Rafael-SDK.git
      #    git add .
      #    git commit -m "Sync latest release files"
      #    git push origin main
      #  env:
      #    GH_TOKEN: ${{ secrets.IVESTEST }}
